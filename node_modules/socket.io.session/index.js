
var cookie = require('cookie');
var cookieParser = require('cookie-parser');
var uid = require('rand-token').suid;

function socketSession(opts){
  var store = opts.store;
  if(!store){
    return null;
  }

  var sessionName = opts.name || "connect.sid";
  var secret = opts.secret;
  var cookieSettings = opts.cookie;

  // var on = function(type, fn){
  //   if(type === "connection"){
  //     io.on("connection",function(socket){
  //       parse(socket,fn);
  //     });
  //   }else{
  //     io.on(type,fn);
  //   }
  // };
  
  var parser = function(socket,next){
    if(!socket.session){
      socket.session = {"cookie":cookieSettings};
    }
    var cookieString = socket.request.headers.cookie;
    if(cookieString){
      var cookies = cookie.parse(cookieString);
      var sessionKey = cookies[sessionName]
      if(!sessionKey){
        return next();
      }
      var sessionID = cookieParser.signedCookie(sessionKey, secret);
      socket.sessionID = sessionID
      store.get(sessionID,function(err,data){
        socket.session = data || {};
        return next();
      });
    }else{
      return next();
    }
  };

  var save = function(socket,fn){
    if(socket.sessionID){
      store.set(socket.sessionID,socket.session||{},fn);
    }else{
      store.set(uid(24),socket.session||{},fn)
    }
  };

  var destroy = function(socket,fn){
    if(socket.sessionID){
      store.destroy(socket.sessionID,fn);
    }
    socket.sessionID = null;
    socket.session = {};
  };

  return {
    "save":save,
    "clear":destroy,
    "destroy":destroy,
    "parser":parser
  };

}


module.exports = socketSession;
